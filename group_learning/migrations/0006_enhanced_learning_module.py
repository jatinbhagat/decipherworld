# Generated by Django 5.2.5 on 2025-09-13 06:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("group_learning", "0005_constitution_simple_indexes"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GameLearningModule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Module title (e.g., 'Understanding Democracy')",
                        max_length=200,
                    ),
                ),
                (
                    "game_type",
                    models.CharField(
                        choices=[
                            ("constitution_challenge", "Constitution Challenge"),
                            ("crisis_response", "Crisis Response"),
                            ("environmental", "Environmental Challenge"),
                            ("social_issue", "Social Issue"),
                            ("governance", "Governance & Policy"),
                            ("all_games", "All Game Types"),
                        ],
                        default="constitution_challenge",
                        help_text="Which game type this module applies to",
                        max_length=30,
                    ),
                ),
                (
                    "principle_explanation",
                    models.TextField(
                        help_text="Main educational content explaining the principle or concept"
                    ),
                ),
                (
                    "key_takeaways",
                    models.TextField(
                        help_text="Bullet points of key learnings (use â€¢ for bullets)"
                    ),
                ),
                (
                    "historical_context",
                    models.TextField(
                        blank=True,
                        help_text="Optional historical background or real-world examples",
                    ),
                ),
                (
                    "real_world_example",
                    models.TextField(
                        blank=True,
                        help_text="Optional contemporary example or case study",
                    ),
                ),
                (
                    "action_impact_title",
                    models.CharField(
                        default="Impact of Your Decision",
                        help_text="Title for the action reasoning section",
                        max_length=200,
                    ),
                ),
                (
                    "governance_impact",
                    models.TextField(
                        blank=True,
                        help_text="How this choice affects the country's governance and democratic institutions",
                    ),
                ),
                (
                    "score_reasoning",
                    models.TextField(
                        blank=True,
                        help_text="Why the governance score increased/decreased with this choice",
                    ),
                ),
                (
                    "country_state_changes",
                    models.TextField(
                        blank=True,
                        help_text="How this choice affects city growth, population, economic prosperity, etc.",
                    ),
                ),
                (
                    "societal_impact",
                    models.TextField(
                        blank=True,
                        help_text="Impact on citizens, rights, freedoms, and social harmony",
                    ),
                ),
                (
                    "constitution_topic_title",
                    models.CharField(
                        default="Learn from the Indian Constitution",
                        help_text="Title for the constitution teaching section",
                        max_length=200,
                    ),
                ),
                (
                    "constitution_chapter",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("introduction", "Introduction to Constitutions"),
                            ("making", "Making of the Indian Constitution"),
                            ("features", "Key Features and Values"),
                            ("government_branches", "Branches of Government"),
                            ("rights_duties", "Citizens' Rights and Duties"),
                            ("inclusivity", "Inclusivity and Pluralism"),
                            ("living_document", "Constitution as a Living Document"),
                        ],
                        help_text="Main constitutional topic this question relates to",
                        max_length=100,
                    ),
                ),
                (
                    "constitution_principle",
                    models.TextField(
                        blank=True,
                        help_text="Core constitutional principle illustrated by this question (e.g., 'Separation of Powers', 'Fundamental Rights')",
                    ),
                ),
                (
                    "constitution_explanation",
                    models.TextField(
                        blank=True,
                        help_text="Detailed explanation of how this constitutional principle works in India",
                    ),
                ),
                (
                    "constitution_article_reference",
                    models.CharField(
                        blank=True,
                        help_text="Specific Indian Constitution articles related to this topic (e.g., 'Article 14-18: Right to Equality')",
                        max_length=200,
                    ),
                ),
                (
                    "historical_constitutional_context",
                    models.TextField(
                        blank=True,
                        help_text="Historical context of how this principle was included in the Indian Constitution",
                    ),
                ),
                (
                    "trigger_condition",
                    models.CharField(
                        choices=[
                            ("question_based", "Triggered by Specific Question"),
                            ("option_based", "Triggered by Specific Answer Option"),
                            ("topic_based", "Triggered by Constitutional Topic"),
                            ("score_based", "Triggered by Score Range"),
                            ("always", "Always Show After Any Answer"),
                        ],
                        default="question_based",
                        help_text="What triggers this learning module to appear",
                        max_length=20,
                    ),
                ),
                (
                    "trigger_topic",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("leadership", "How Leaders Are Chosen"),
                            ("rules", "Who Makes Rules"),
                            ("rights", "Citizens Rights & Freedoms"),
                            ("justice", "Justice & Fairness"),
                            ("participation", "Citizen Participation"),
                            ("checks", "Checks & Balances"),
                        ],
                        help_text="Show for this constitutional topic (if topic_based)",
                        max_length=50,
                    ),
                ),
                (
                    "min_score",
                    models.IntegerField(
                        blank=True,
                        help_text="Minimum team score to trigger (if score_based)",
                        null=True,
                    ),
                ),
                (
                    "max_score",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum team score to trigger (if score_based)",
                        null=True,
                    ),
                ),
                (
                    "display_timing",
                    models.CharField(
                        choices=[
                            ("instant", "Show Immediately"),
                            ("delayed_3s", "Show After 3 Seconds"),
                            ("delayed_5s", "Show After 5 Seconds"),
                        ],
                        default="instant",
                        help_text="When to show the module after trigger condition is met",
                        max_length=20,
                    ),
                ),
                (
                    "is_skippable",
                    models.BooleanField(
                        default=True, help_text="Can users skip this learning module?"
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        default=True, help_text="Is this module currently active?"
                    ),
                ),
                (
                    "low_performance_content",
                    models.TextField(
                        blank=True,
                        help_text="Alternative content for teams with low scores (optional)",
                    ),
                ),
                (
                    "high_performance_content",
                    models.TextField(
                        blank=True,
                        help_text="Alternative content for teams with high scores (optional)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "view_count",
                    models.PositiveIntegerField(
                        default=0, help_text="How many times this module has been shown"
                    ),
                ),
                (
                    "skip_count",
                    models.PositiveIntegerField(
                        default=0, help_text="How many times this module was skipped"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Admin user who created this module",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "trigger_option",
                    models.ForeignKey(
                        blank=True,
                        help_text="Show after this specific answer choice (if option_based)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_learning.constitutionoption",
                    ),
                ),
                (
                    "trigger_question",
                    models.ForeignKey(
                        blank=True,
                        help_text="Show after this specific question (if question_based)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_learning.constitutionquestion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Learning Module",
                "verbose_name_plural": "Learning Modules",
                "ordering": ["game_type", "title"],
            },
        ),
    ]
