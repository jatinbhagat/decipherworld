# Generated by Django 5.2.5 on 2025-10-16 16:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("group_learning", "0012_alter_climategamesession_round_duration_minutes"),
    ]

    operations = [
        migrations.CreateModel(
            name="DesignThinkingGame",
            fields=[
                (
                    "game_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="group_learning.game",
                    ),
                ),
                (
                    "auto_advance_missions",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically advance missions when all teams complete",
                    ),
                ),
                (
                    "default_mission_duration",
                    models.IntegerField(
                        default=15,
                        help_text="Default duration for each mission in minutes",
                    ),
                ),
                (
                    "require_all_teams_complete",
                    models.BooleanField(
                        default=False,
                        help_text="Require all teams to complete before advancing to next mission",
                    ),
                ),
                (
                    "enable_mentor_prompts",
                    models.BooleanField(
                        default=True,
                        help_text="Enable Vani (Virtual Mentor) prompts during gameplay",
                    ),
                ),
                (
                    "mentor_prompt_frequency",
                    models.CharField(
                        choices=[
                            ("low", "Minimal prompts"),
                            ("medium", "Regular prompts"),
                            ("high", "Frequent prompts"),
                        ],
                        default="medium",
                        help_text="How frequently Vani provides guidance",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "verbose_name": "Design Thinking Game",
                "verbose_name_plural": "Design Thinking Games",
            },
            bases=("group_learning.game",),
        ),
        migrations.CreateModel(
            name="DesignMission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mission_type",
                    models.CharField(
                        choices=[
                            ("kickoff", "Energizing Kickoff"),
                            ("empathy", "Empathy Mission"),
                            ("define", "Define Mission"),
                            ("ideate", "Ideate Mission"),
                            ("prototype", "Prototype Mission"),
                            ("showcase", "Final Showcase"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(help_text="Mission sequence order"),
                ),
                ("title", models.CharField(help_text="Mission title", max_length=200)),
                (
                    "description",
                    models.TextField(help_text="What students will do in this mission"),
                ),
                (
                    "instructions",
                    models.TextField(help_text="Step-by-step instructions for teams"),
                ),
                (
                    "estimated_duration",
                    models.IntegerField(
                        default=15, help_text="Estimated duration in minutes"
                    ),
                ),
                (
                    "minimum_time",
                    models.IntegerField(
                        default=5,
                        help_text="Minimum time before mission can be advanced",
                    ),
                ),
                (
                    "requires_file_upload",
                    models.BooleanField(
                        default=False,
                        help_text="Teams must upload files/photos during this mission",
                    ),
                ),
                (
                    "requires_text_submission",
                    models.BooleanField(
                        default=True, help_text="Teams must submit text responses"
                    ),
                ),
                (
                    "max_submissions",
                    models.IntegerField(
                        default=1,
                        help_text="Maximum submissions per team for this mission",
                    ),
                ),
                (
                    "learning_focus",
                    models.TextField(
                        blank=True,
                        help_text="What students will learn from this mission",
                    ),
                ),
                (
                    "success_criteria",
                    models.TextField(
                        blank=True, help_text="How to measure mission success"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="missions",
                        to="group_learning.designthinkinggame",
                    ),
                ),
            ],
            options={
                "verbose_name": "Design Mission",
                "verbose_name_plural": "Design Missions",
                "ordering": ["game", "order"],
                "unique_together": {("game", "order")},
            },
        ),
        migrations.CreateModel(
            name="DesignThinkingSession",
            fields=[
                (
                    "gamesession_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="group_learning.gamesession",
                    ),
                ),
                ("mission_start_time", models.DateTimeField(blank=True, null=True)),
                ("mission_end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "is_facilitator_controlled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether facilitator controls mission advancement",
                    ),
                ),
                (
                    "facilitator_notes",
                    models.TextField(
                        blank=True, help_text="Private notes for the facilitator"
                    ),
                ),
                (
                    "enable_peer_viewing",
                    models.BooleanField(
                        default=True,
                        help_text="Allow teams to see other teams' submissions",
                    ),
                ),
                (
                    "enable_live_feedback",
                    models.BooleanField(
                        default=True,
                        help_text="Enable real-time feedback and spotlighting",
                    ),
                ),
                (
                    "mentor_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether Vani mentor is currently active",
                    ),
                ),
                ("last_mentor_prompt", models.DateTimeField(blank=True, null=True)),
                (
                    "current_mission",
                    models.ForeignKey(
                        blank=True,
                        help_text="Currently active mission",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="group_learning.designmission",
                    ),
                ),
                (
                    "design_game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="design_sessions",
                        to="group_learning.designthinkinggame",
                    ),
                ),
            ],
            options={
                "verbose_name": "Design Thinking Session",
                "verbose_name_plural": "Design Thinking Sessions",
            },
            bases=("group_learning.gamesession",),
        ),
        migrations.CreateModel(
            name="DesignTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "team_name",
                    models.CharField(help_text="Team's chosen name", max_length=100),
                ),
                (
                    "team_emoji",
                    models.CharField(
                        default="💡", help_text="Team's chosen emoji", max_length=10
                    ),
                ),
                (
                    "team_color",
                    models.CharField(
                        default="#3B82F6",
                        help_text="Team's chosen color (hex code)",
                        max_length=7,
                    ),
                ),
                (
                    "team_members",
                    models.JSONField(
                        default=list, help_text="List of team member names and roles"
                    ),
                ),
                ("missions_completed", models.PositiveIntegerField(default=0)),
                ("total_submissions", models.PositiveIntegerField(default=0)),
                (
                    "problem_statement",
                    models.TextField(
                        blank=True, help_text="Team's defined problem statement (POV)"
                    ),
                ),
                (
                    "target_user",
                    models.CharField(
                        blank=True,
                        help_text="Target user identified by team",
                        max_length=200,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "current_mission",
                    models.ForeignKey(
                        blank=True,
                        help_text="Team's current mission",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="group_learning.designmission",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="design_teams",
                        to="group_learning.designthinkingsession",
                    ),
                ),
            ],
            options={
                "verbose_name": "Design Team",
                "verbose_name_plural": "Design Teams",
                "ordering": ["team_name"],
            },
        ),
        migrations.CreateModel(
            name="MentorNudge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Nudge title/header", max_length=200),
                ),
                ("message", models.TextField(help_text="Vani's message to teams")),
                (
                    "nudge_type",
                    models.CharField(
                        choices=[
                            ("encouragement", "Encouragement"),
                            ("instruction", "Instruction/Guidance"),
                            ("prompt", "Thinking Prompt"),
                            ("celebration", "Celebration"),
                            ("refocus", "Refocus/Redirect"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("mission_start", "Mission Start"),
                            ("time_based", "Time-based"),
                            ("progress_based", "Progress-based"),
                            ("facilitator_triggered", "Facilitator Triggered"),
                            ("team_specific", "Team-specific"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "trigger_time_seconds",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Seconds after mission start to trigger (for time-based)",
                        null=True,
                    ),
                ),
                (
                    "trigger_condition",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Conditions for triggering this nudge",
                    ),
                ),
                (
                    "display_duration",
                    models.PositiveIntegerField(
                        default=10, help_text="How long to display nudge in seconds"
                    ),
                ),
                (
                    "is_dismissible",
                    models.BooleanField(
                        default=True, help_text="Can teams dismiss this nudge"
                    ),
                ),
                (
                    "emoji",
                    models.CharField(
                        default="💡",
                        help_text="Emoji for Vani's expression",
                        max_length=10,
                    ),
                ),
                (
                    "background_color",
                    models.CharField(
                        default="#10B981",
                        help_text="Background color for nudge (hex)",
                        max_length=7,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "mission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mentor_nudges",
                        to="group_learning.designmission",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mentor Nudge",
                "verbose_name_plural": "Mentor Nudges",
                "ordering": ["mission", "trigger_time_seconds"],
            },
        ),
        migrations.CreateModel(
            name="TeamSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "submission_type",
                    models.CharField(
                        choices=[
                            ("observation", "Empathy Observation"),
                            ("photo", "Photo Evidence"),
                            ("voice_note", "Voice Note"),
                            ("problem_statement", "Problem Statement (POV)"),
                            ("idea", "Generated Idea"),
                            ("prototype_description", "Prototype Description"),
                            ("prototype_photo", "Prototype Photo"),
                            ("reflection", "Mission Reflection"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional title for submission",
                        max_length=200,
                    ),
                ),
                ("content", models.TextField(help_text="Text content of submission")),
                (
                    "uploaded_file",
                    models.FileField(
                        blank=True,
                        help_text="Uploaded photo, audio, or document",
                        null=True,
                        upload_to="design_thinking_submissions/",
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("image", "Image/Photo"),
                            ("audio", "Audio Recording"),
                            ("document", "Document"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "submitted_by",
                    models.CharField(
                        help_text="Name of team member who submitted", max_length=100
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("peer_likes", models.PositiveIntegerField(default=0)),
                (
                    "facilitator_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Featured by facilitator during showcase",
                    ),
                ),
                (
                    "empathy_target_user",
                    models.CharField(
                        blank=True,
                        help_text="Target user for empathy observation",
                        max_length=200,
                    ),
                ),
                (
                    "idea_category",
                    models.CharField(
                        blank=True,
                        help_text="Category for ideation submissions",
                        max_length=100,
                    ),
                ),
                (
                    "mission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_learning.designmission",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="group_learning.designteam",
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Submission",
                "verbose_name_plural": "Team Submissions",
                "ordering": ["-submitted_at"],
            },
        ),
        migrations.CreateModel(
            name="TeamProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("is_completed", models.BooleanField(default=False)),
                ("submission_count", models.PositiveIntegerField(default=0)),
                ("time_spent_seconds", models.PositiveIntegerField(default=0)),
                (
                    "facilitator_spotlight",
                    models.BooleanField(
                        default=False,
                        help_text="Highlighted by facilitator for good work",
                    ),
                ),
                (
                    "facilitator_notes",
                    models.TextField(
                        blank=True,
                        help_text="Private facilitator notes about team's progress",
                    ),
                ),
                (
                    "mission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="group_learning.designmission",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_progress",
                        to="group_learning.designthinkingsession",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mission_progress",
                        to="group_learning.designteam",
                    ),
                ),
            ],
            options={
                "verbose_name": "Team Progress",
                "verbose_name_plural": "Team Progress Records",
                "ordering": ["-started_at"],
                "unique_together": {("session", "team", "mission")},
            },
        ),
    ]
