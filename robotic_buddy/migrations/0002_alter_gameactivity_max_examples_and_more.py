# Generated by Django 5.2.5 on 2025-09-13 04:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("robotic_buddy", "0001_initial"),
    ]

    operations = [
        migrations.AlterField(
            model_name="gameactivity",
            name="max_examples",
            field=models.IntegerField(
                default=16, help_text="Maximum examples in one session"
            ),
        ),
        migrations.AlterField(
            model_name="gameactivity",
            name="min_examples_needed",
            field=models.IntegerField(
                default=5, help_text="Minimum examples needed to 'train' buddy"
            ),
        ),
        migrations.CreateModel(
            name="AIReasoningExplanation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reasoning_type",
                    models.CharField(
                        choices=[
                            ("pattern_matching", "Pattern Matching"),
                            ("similarity_comparison", "Similarity Comparison"),
                            ("feature_analysis", "Feature Analysis"),
                            ("example_based", "Example-Based Learning"),
                        ],
                        default="example_based",
                        max_length=30,
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(help_text="AI confidence level (0.0-1.0)"),
                ),
                (
                    "confidence_explanation",
                    models.TextField(help_text="Why this confidence level"),
                ),
                (
                    "reasoning_steps",
                    models.JSONField(
                        default=list,
                        help_text="Array of reasoning steps with descriptions and supporting examples",
                    ),
                ),
                (
                    "supporting_examples",
                    models.JSONField(
                        default=list,
                        help_text="Training examples that influenced this prediction",
                    ),
                ),
                (
                    "visual_patterns",
                    models.JSONField(
                        default=dict,
                        help_text="Visual features or patterns the AI identified",
                    ),
                ),
                (
                    "training_quality_score",
                    models.FloatField(
                        default=1.0,
                        help_text="Quality of training data that led to this prediction",
                    ),
                ),
                (
                    "quality_explanation",
                    models.TextField(
                        blank=True,
                        help_text="How training quality affected this prediction",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "example",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reasoning",
                        to="robotic_buddy.trainingexample",
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="explanations",
                        to="robotic_buddy.trainingsession",
                    ),
                ),
            ],
            options={
                "verbose_name": "AI Reasoning Explanation",
                "verbose_name_plural": "AI Reasoning Explanations",
                "ordering": ["-created_at"],
            },
        ),
    ]
