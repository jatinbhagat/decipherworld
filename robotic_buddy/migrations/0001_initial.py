# Generated by Django 5.2.5 on 2025-09-06 08:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="GameActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("classification", "Object Classification"),
                            ("command_training", "Command Training"),
                            ("emotion_detection", "Emotion Recognition"),
                            ("decision_tree", "Decision Tree Logic"),
                            ("pattern_recognition", "Pattern Recognition"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "difficulty_level",
                    models.IntegerField(
                        choices=[(1, "Beginner"), (2, "Intermediate"), (3, "Advanced")],
                        default=1,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Kid-friendly description of the activity"
                    ),
                ),
                (
                    "instructions",
                    models.TextField(help_text="How to play instructions"),
                ),
                (
                    "min_examples_needed",
                    models.IntegerField(
                        default=3, help_text="Minimum examples needed to 'train' buddy"
                    ),
                ),
                (
                    "max_examples",
                    models.IntegerField(
                        default=10, help_text="Maximum examples in one session"
                    ),
                ),
                (
                    "experience_reward",
                    models.IntegerField(
                        default=10, help_text="XP awarded for completing activity"
                    ),
                ),
                (
                    "required_level",
                    models.IntegerField(
                        default=1, help_text="Buddy level required to unlock"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Game Activity",
                "verbose_name_plural": "Game Activities",
                "ordering": ["required_level", "difficulty_level", "name"],
            },
        ),
        migrations.CreateModel(
            name="RoboticBuddy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Buddy's name chosen by the child", max_length=50
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        help_text="Anonymous session identifier",
                        max_length=100,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_active", models.DateTimeField(auto_now=True)),
                (
                    "personality",
                    models.CharField(
                        choices=[
                            ("cheerful", "Cheerful & Energetic"),
                            ("curious", "Curious & Inquisitive"),
                            ("patient", "Patient & Thoughtful"),
                            ("playful", "Playful & Fun-loving"),
                            ("wise", "Wise & Encouraging"),
                        ],
                        default="cheerful",
                        max_length=20,
                    ),
                ),
                (
                    "primary_color",
                    models.CharField(
                        choices=[
                            ("blue", "Ocean Blue"),
                            ("green", "Forest Green"),
                            ("purple", "Royal Purple"),
                            ("orange", "Sunset Orange"),
                            ("pink", "Bubblegum Pink"),
                            ("red", "Fire Red"),
                        ],
                        default="blue",
                        max_length=20,
                    ),
                ),
                (
                    "secondary_color",
                    models.CharField(
                        choices=[
                            ("blue", "Ocean Blue"),
                            ("green", "Forest Green"),
                            ("purple", "Royal Purple"),
                            ("orange", "Sunset Orange"),
                            ("pink", "Bubblegum Pink"),
                            ("red", "Fire Red"),
                        ],
                        default="green",
                        max_length=20,
                    ),
                ),
                ("total_training_sessions", models.IntegerField(default=0)),
                ("total_examples_learned", models.IntegerField(default=0)),
                (
                    "current_level",
                    models.IntegerField(default=1, help_text="Buddy's learning level"),
                ),
                ("experience_points", models.IntegerField(default=0)),
                (
                    "knowledge_base",
                    models.JSONField(
                        default=dict,
                        help_text="Stores what the buddy has 'learned' from training sessions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Robotic Buddy",
                "verbose_name_plural": "Robotic Buddies",
                "ordering": ["-last_active"],
            },
        ),
        migrations.CreateModel(
            name="TrainingSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("abandoned", "Abandoned"),
                        ],
                        default="in_progress",
                        max_length=20,
                    ),
                ),
                ("examples_provided", models.IntegerField(default=0)),
                ("correct_predictions", models.IntegerField(default=0)),
                ("total_predictions", models.IntegerField(default=0)),
                ("experience_earned", models.IntegerField(default=0)),
                (
                    "session_data",
                    models.JSONField(
                        default=dict,
                        help_text="Stores detailed session information and examples",
                    ),
                ),
                (
                    "activity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="robotic_buddy.gameactivity",
                    ),
                ),
                (
                    "buddy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_sessions",
                        to="robotic_buddy.roboticbuddy",
                    ),
                ),
            ],
            options={
                "verbose_name": "Training Session",
                "verbose_name_plural": "Training Sessions",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="TrainingExample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "example_type",
                    models.CharField(
                        choices=[
                            ("classification_item", "Classification Item"),
                            ("command", "Voice/Text Command"),
                            ("emotion_image", "Emotion Image"),
                            ("pattern", "Visual Pattern"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="What the example represents (e.g., 'cat', 'happy', 'jump')",
                        max_length=100,
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        help_text="Example-specific data (image path, text, coordinates, etc.)"
                    ),
                ),
                (
                    "buddy_prediction",
                    models.CharField(
                        blank=True, help_text="What buddy predicted", max_length=100
                    ),
                ),
                ("was_correct", models.BooleanField(default=False)),
                (
                    "confidence_level",
                    models.FloatField(
                        default=0.5, help_text="Simulated confidence (0.0-1.0)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="examples",
                        to="robotic_buddy.trainingsession",
                    ),
                ),
            ],
            options={
                "verbose_name": "Training Example",
                "verbose_name_plural": "Training Examples",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="BuddyAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "achievement_type",
                    models.CharField(
                        choices=[
                            ("first_steps", "First Steps"),
                            ("learning_streak", "Learning Streak"),
                            ("master_classifier", "Master Classifier"),
                            ("command_expert", "Command Expert"),
                            ("emotion_reader", "Emotion Reader"),
                            ("pattern_detective", "Pattern Detective"),
                        ],
                        max_length=30,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("required_sessions", models.IntegerField(default=0)),
                ("required_examples", models.IntegerField(default=0)),
                ("required_accuracy", models.FloatField(default=0.0)),
                ("unlocked_at", models.DateTimeField(auto_now_add=True)),
                (
                    "buddy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to="robotic_buddy.roboticbuddy",
                    ),
                ),
            ],
            options={
                "verbose_name": "Buddy Achievement",
                "verbose_name_plural": "Buddy Achievements",
                "ordering": ["-unlocked_at"],
                "unique_together": {("buddy", "achievement_type")},
            },
        ),
    ]
