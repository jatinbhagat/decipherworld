# Generated by Django 5.2.5 on 2025-09-15 18:38

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CyberBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("badge_id", models.CharField(max_length=50, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("icon", models.CharField(max_length=20)),
                ("unlock_condition", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "cyber_city_badge",
            },
        ),
        migrations.CreateModel(
            name="SecurityChallenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("challenge_number", models.PositiveIntegerField()),
                ("title", models.CharField(max_length=100)),
                ("question_text", models.TextField()),
                ("option_a", models.CharField(max_length=200)),
                ("option_b", models.CharField(max_length=200)),
                ("option_c", models.CharField(max_length=200)),
                (
                    "correct_answer",
                    models.CharField(
                        choices=[("A", "A"), ("B", "B"), ("C", "C")], max_length=1
                    ),
                ),
                ("explanation", models.TextField()),
                ("tessa_tip", models.TextField()),
            ],
            options={
                "db_table": "cyber_city_challenge",
                "ordering": ["challenge_number"],
            },
        ),
        migrations.CreateModel(
            name="CyberCitySession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_code",
                    models.CharField(db_index=True, max_length=10, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("waiting", "Waiting for Players"),
                            ("in_progress", "Game in Progress"),
                            ("completed", "Completed"),
                            ("abandoned", "Abandoned"),
                        ],
                        default="waiting",
                        max_length=20,
                    ),
                ),
                ("player_count", models.PositiveIntegerField(default=0)),
                ("max_players", models.PositiveIntegerField(default=8)),
                (
                    "session_data",
                    models.JSONField(
                        default=dict, help_text="Game-specific session configuration"
                    ),
                ),
                (
                    "current_mission",
                    models.CharField(default="password_fortress", max_length=50),
                ),
                ("mission_stage", models.CharField(default="intro", max_length=50)),
                ("city_security_level", models.PositiveIntegerField(default=0)),
            ],
            options={
                "db_table": "cyber_city_session",
                "indexes": [
                    models.Index(
                        fields=["session_code", "status"],
                        name="cyber_city__session_ef5383_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="cyber_city__created_b8fe8b_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CyberCityPlayer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("player_name", models.CharField(max_length=100)),
                (
                    "player_session_id",
                    models.CharField(
                        help_text="Browser session identifier", max_length=32
                    ),
                ),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("total_score", models.IntegerField(default=0)),
                ("actions_completed", models.PositiveIntegerField(default=0)),
                (
                    "player_data",
                    models.JSONField(
                        default=dict, help_text="Game-specific player information"
                    ),
                ),
                ("hero_nickname", models.CharField(max_length=50)),
                (
                    "suit_style",
                    models.CharField(
                        choices=[
                            ("neon_knight", "Neon Knight"),
                            ("pixel_guard", "Pixel Guard"),
                            ("glitch_hunter", "Glitch Hunter"),
                        ],
                        default="neon_knight",
                        max_length=30,
                    ),
                ),
                ("suit_color", models.CharField(default="#00FFFF", max_length=7)),
                ("current_challenge", models.PositiveIntegerField(default=1)),
                ("challenges_completed", models.PositiveIntegerField(default=0)),
                ("badges_earned", models.JSONField(default=list)),
                ("correct_answers", models.PositiveIntegerField(default=0)),
                ("wrong_answers", models.PositiveIntegerField(default=0)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="players",
                        to="cyber_city.cybercitysession",
                    ),
                ),
            ],
            options={
                "db_table": "cyber_city_player",
            },
        ),
        migrations.CreateModel(
            name="PlayerChallenge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "answer_given",
                    models.CharField(
                        choices=[("A", "A"), ("B", "B"), ("C", "C")], max_length=1
                    ),
                ),
                ("is_correct", models.BooleanField()),
                ("points_earned", models.PositiveIntegerField(default=0)),
                (
                    "time_taken",
                    models.PositiveIntegerField(help_text="Seconds taken to answer"),
                ),
                ("answered_at", models.DateTimeField(auto_now_add=True)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenge_responses",
                        to="cyber_city.cybercityplayer",
                    ),
                ),
                (
                    "challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cyber_city.securitychallenge",
                    ),
                ),
            ],
            options={
                "db_table": "cyber_city_player_challenge",
            },
        ),
        migrations.AddIndex(
            model_name="cybercityplayer",
            index=models.Index(
                fields=["session", "is_active"], name="cyber_city__session_ab9360_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cybercityplayer",
            index=models.Index(
                fields=["last_activity"], name="cyber_city__last_ac_484f80_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="cybercityplayer",
            unique_together={("session", "player_session_id")},
        ),
        migrations.AddIndex(
            model_name="playerchallenge",
            index=models.Index(
                fields=["player", "answered_at"], name="cyber_city__player__46a39b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="playerchallenge",
            index=models.Index(
                fields=["challenge", "is_correct"],
                name="cyber_city__challen_e63ad1_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="playerchallenge",
            unique_together={("player", "challenge")},
        ),
    ]
